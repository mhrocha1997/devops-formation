name: Build

on:
  push:
    branches: 
      - main
    paths: ["./app-nestjs/**"]

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  build_and_push:
    name: "Build and Push"
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [18, 20]
    #   fail-fast: false
    
    defaults:
      run:
        working-directory: ./api
  
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with: 
        node-version: 20
        cache: 'yarn'
        cache-dependency-path: './api/yarn.lock'
    - run: yarn
    - run: yarn run test
    
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        working_directory: ./api


    - name: Generate tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        role-to-assume: ${{secrets.ECR_ROLE}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{secrets.ECR_REPO_NAME}}
        IMAGE_TAG: ${{steps.generate_tag.outputs.sha}}
      run: |
        docker build -t $REGISTRY/api-template-nest:$IMAGE_TAG .
        docker push $REGISTRY/api-template-nest:$IMAGE_TAG
        docker tag $REGISTRY/api-template-nest:$IMAGE_TAG $REGISTRY/api-template-nest:latest
        docker push $REGISTRY/api-template-nest:latest
        IMAGE=$(echo $REGISTRY/api-template-nest:$IMAGE_TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT
    

    - name: Deploy to AppRunner
      id: deploy-apprunner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: api-template-nest
        image: ${{steps.build-docker-image.outputs.image}}
        access-role-arn: ${{secrets.APP_RUNNER_ROLE}}
        region: us-east-2
        cpu: 1
        memory: 2
        port: 3000
        wait-for-service-stability-seconds: 180

    - name: App Runner check
      run: echo "App Runner Running ..." ${{steps.deploy-apprunner.outputs.service-url}}


    # - name: Docker Login
    #   uses: docker/login-action@v3.3.0
    #   with:
    #       username: ${{secrets.DOCKERHUB_USERNAME}}
    #       password: ${{secrets.DOCKERHUB_TOKEN}}

    # - name: Build and Push
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: ./api
    #     push:  true
    #     tags: ${{secrets.DOCKERHUB_USERNAME}}/api-template-nest:${{steps.generate_tag.outputs.sha}},${{secrets.DOCKERHUB_USERNAME}}/api-template-nest:latest



    # - name: Build docker image
    #   run: docker build -t ${{secrets.DOCKERHUB_USERNAME}}/api-template-nest:${{steps.generate_tag.outputs.sha}} .
    # - name: Push image
    #   run: docker push ${{secrets.DOCKERHUB_USERNAME}}/api-template-nest:${{steps.generate_tag.outputs.sha}}
  